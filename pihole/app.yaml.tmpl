---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-data
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs

---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: pihole
  namespace: demo

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'pihole-anyuid'
subjects:
  - kind: ServiceAccount
    name: pihole
    namespace: demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:openshift:scc:anyuid'

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: pihole
  namespace: demo
  labels:
    app: pihole
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: pihole
    deploymentconfig: pihole
  template:
    metadata:
      labels:
        app: pihole
        deploymentconfig: pihole
    spec:
      volumes:
        - name: "pihole-data"
          persistentVolumeClaim:
            claimName: "pihole-data"
        - name: "run"
          emptyDir: {}
      serviceAccountName: pihole
      serviceAccount: pihole
      containers:
        - name: pihole
          image: pihole/pihole:latest
          securityContext:
            runAsUser: 0
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          env:
            - name: "VIRTUAL_HOST"
              value: "pihole.{{domain}}"
            - name: "PROXY_LOCATION"
              value: "pihole.{{domain}}"
            - name: "TZ"
              value: "America/Chicago"
            - name: "ServerIP"
              value: "127.0.0.1"
            - name: "WEBPASSWORD"
              value: "pihole"
            - name: "DNSMASQ_USER"
              value: "root"
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole-data
              subPath: etc-pihole
            - mountPath: /etc/dnsmasq.d
              name: pihole-data
              subPath: etc-dnsmasq
            - mountPath: /run/pihole
              name: run
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dns
  namespace: demo
  labels:
    app: pihole
spec:
  ports:
  - name: pihole-dns
    port: 53
    protocol: UDP
    nodePort: 30053
  type: NodePort
  selector:
    app: pihole
    deploymentconfig: pihole
  sessionAffinity: None
  externalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-web
  namespace: demo
  labels:
    app: pihole
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: pihole
    deploymentconfig: pihole
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster

---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: pihole
  namespace: demo
  labels:
    app: pihole
spec:
  host: pihole.{{domain}}
  to:
    kind: Service
    name: pihole-web
  port:
    targetPort: 80
